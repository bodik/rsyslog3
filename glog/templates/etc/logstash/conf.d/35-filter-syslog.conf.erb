filter {
	if [type] == "syslog" {
		grok {
			patterns_dir => "/etc/logstash/patterns"
			match => [ "message", "%{SYSLOGLINEMETA2}" ]
			overwrite => [ "message" ]
		}
		date {
			match => [ "timestamp", "ISO8601", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss", "MMM d HH:mm:ss" ]
		}
		mutate {
			remove_field => ["timestamp"]
		}
		if [program] =~ /^fail2ban.*/ {
			grok {
				add_tag => "f2b"
				patterns_dir => "/etc/logstash/patterns"
				match => [ "message", "%{FAIL2BANACTION}" ]
				tag_on_failure => []
			}
			geoip {
				source => "[f2b][remote]"
                        	fields => ["country_code2", "location"]
			}
			mutate {
				rename => ["[geoip][country_code2]", "[geoip][cc]"]
				add_field => { "[f2b][hostname]" => "%{[f2b][remote]}" }
                	}
			dns {
				reverse => [ "[f2b][hostname]" ]
				action => "replace"
				hit_cache_size => 2000
				hit_cache_ttl => 3600
				failed_cache_size => 2000
				failed_cache_ttl => 3600
			}
		}
		if [program] =~ /modules/ {
                        grok {
                                add_tag => "modules"
                                patterns_dir => "/etc/logstash/patterns"
                                match => [ "message", "%{MODULESLINE}" ]
                                tag_on_failure => []
                        }
			mutate {
				split => { "modulesused" => " " }
			}
                }
	}
}
