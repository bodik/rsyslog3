#!/bin/sh

#https://wiki.metacentrum.cz/wiki/P%C5%99%C3%ADstup_do_MetaCloudu_p%C5%99es_p%C5%99%C3%ADkazovou_%C5%99%C3%A1dku

export ONE_XMLRPC="$(cat /dev/shm/one_host)"
export ONE_AUTH="/dev/shm/one_auth"
export ONERSA="/dev/shm/sshkey"



if [ -z $VMNAME ]; then
	VMNAME="RS"
fi
cd /tmp || exit 1



rreturn() {
	RET=$1; shift

	if [ $RET -eq 0 ]; then
		echo "RESULT: OK $@"
		exit 0
	fi

	echo "RESULT: FAILED $@"
	exit 1
}



vm_id() {
	onevm list -v -f NAME=$VMNAME | tail -n1 | awk '{print $1}'
}

vm_list() {
	if [ "$1" = "-n" ]; then
		onevm list -v | while read i; do 
			echo -n "$i"
			VMIP=$(onevm show $( echo "$i" | awk '{print $4}' ) | grep PUBLIC_IP | awk -F"\"" '{print $2}')
			VMHNAME=$(host $VMIP 2>/dev/null| grep "domain name pointer" | rev | awk '{print $1}' | rev)
			echo " $VMHNAME"
		done
	else
		onevm list -v
	fi
}

vm_status() {
	onevm list -v -f NAME=$VMNAME
	rreturn $? "$0 status"
}

vm_build() {
	/puppet/jenkins/bin/metacloud.init shutdown
	/puppet/jenkins/bin/metacloud.init destroy

	if [ -z "$1" ]; then
		TEMPLATE="rsyslog3"
	else
		TEMPLATE=$1
	fi
	onetemplate instantiate "$TEMPLATE" --name $VMNAME --hold
	
	rreturn $? "$0"
}

vm_start() {
	VMID=$(/puppet/jenkins/bin/metacloud.init id)
	if [ -z "$VMID" ]; then rreturn 1 "metacloud id not detected"; fi


	STATE=$(onevm list -f ID=$VMID -l ID,STAT --csv | tail -n1 | awk -F"," '{print $2}')
	case "$STATE" in
		hold) onevm release $VMID ;;
		poff) onevm resume $VMID ;;
		runn|prol|boot) rreturn 0 "vm already running" ;;
		*) rreturn 1 "vm unknown state $STATE" ;;
	esac


	RET=1
	for i in `seq 1 600`; do
		/puppet/jenkins/bin/metacloud.init ssh /bin/true 1>/dev/null && RET=$? && break 1>/dev/null
		/puppet/jenkins/bin/metacloud.init status
		sleep 5
	done
	if [ $RET -ne 0 ]; then
		rreturn $RET "$0 start failed $VMNAME"
	fi
	sleep 10
	for i in `seq 1 300`; do
		#this is created by rc.local modified by cloudinit
		/puppet/jenkins/bin/metacloud.init ssh '[ -f /root/READY-TO-USE ]'
		if [ $? -eq 0 ]; then
			/puppet/jenkins/bin/metacloud.init fixup
			rreturn 0 "$0 start"
		fi
		echo "INFO: waiting for cloud-init to finnish"
		sleep 5
	done
	rreturn 1 "$0 start failed"
}

vm_fixup() {
#	/puppet/jenkins/bin/metacloud.init ssh '
#cat /etc/krb5.conf  | grep ".meta.zcu.cz = META" 1>/dev/null 2>/dev/null
#if [ $? -eq 1 ]; then perl -pi -e "s#.zcu.cz = ZCU.CZ#.zcu.cz = ZCU.CZ\\n.meta.zcu.cz = META#" /etc/krb5.conf; fi'
	rreturn $? "$0 fixup"
}

vm_ssh() {
	VMIP=$(onevm show $(/puppet/jenkins/bin/metacloud.init id) | grep PUBLIC_IP | awk -F"\"" '{print $2}')
	if [ -z "$VMIP" ]; then
		rreturn 1 "vm ip not detected from metacloud"
	fi
	ssh -i $ONERSA -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' -o 'ConnectTimeout=5' -o 'LogLevel=quiet' root@$VMIP $@
	rreturn $? "$0 ssh $@"
}

vm_shutdown() {
	VMID=$(/puppet/jenkins/bin/metacloud.init id)

	/puppet/jenkins/bin/metacloud.init ssh /bin/true
	if [ $? -ne 0 ]; then
		rreturn $? "shutdown vm not running"
	fi

	echo "INFO: sending poweroff"
	timeout 60 /puppet/jenkins/bin/metacloud.init ssh poweroff
	# poweroff returns 1, so we cannot wait for 0 to checkt it's success ;(

	RET=1
	for i in `seq 1 60`; do
		onevm list -f ID=$VMID -l ID,STAT --csv | grep "^${VMID},poff$"
		if [ $? -eq 0 ]; then
			rreturn $? "shutdown"
		fi
		echo "INFO: waiting for poweroff"
		/puppet/jenkins/bin/metacloud.init status
		sleep 5
	done

	rreturn 1 "shutdown did not finished in time"
}

vm_destroy() {
	VMID=$(/puppet/jenkins/bin/metacloud.init id)
	if [ -z "$VMID" ]; then
		rreturn 1 "metacloud id not detected"
	fi
	onevm terminate $VMID
	rreturn $? "$0 destroy $@"
}

metacloud_creds() {
	echo "transfer credentials to /dev/shm and then login"
	su jenkins
	echo "try metacloud.init templates to sync vm templates"
}



case "$1" in

	id)
		vm_id
	;;
	list)
		shift
		vm_list $@
	;;
	status)
		vm_status
	;;



	build)
		shift
		vm_build $@
	;;
	start)
		vm_start
	;;
	fixup)
		vm_fixup
	;;



	ssh)
		shift
		vm_ssh $@
	;;



	shutdown)
		vm_shutdown
	;;
	destroy)
		vm_destroy
	;;



	creds)
		metacloud_creds
	;;



	ssh_multi)
		shift
		SELECTOR="$1"; shift

		for all in $(/puppet/jenkins/bin/metacloud.init list | grep "$SELECTOR" | awk '{print $4}'); do
			VMNAME=$all /puppet/jenkins/bin/metacloud.init ssh $@ &
		done
		wait
	;;



	*)
		rreturn 1 "$0 wrong command"
	;;
esac

