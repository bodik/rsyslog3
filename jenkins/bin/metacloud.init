#!/bin/sh

#https://wiki.metacentrum.cz/wiki/P%C5%99%C3%ADstup_do_MetaCloudu_p%C5%99es_p%C5%99%C3%ADkazovou_%C5%99%C3%A1dku

export ONE_HOST="https://cloud.metacentrum.cz"
#EnvVars for ONE tools
export ONE_AUTH="/dev/shm/one_auth"
touch $ONE_AUTH
export ONE_XMLRPC="$ONE_HOST:6443/RPC2"
export ONEUSERNAME=$(cat /dev/shm/username)
export ONECRT="/dev/shm/usercert.pem"
export ONEKEY="/dev/shm/userkey.pem"
export ONERSA="/dev/shm/sshkey"



if [ -z $VMNAME ]; then
	VMNAME="RS"
fi
cd /tmp || exit 1



rreturn() {
	RET=$1
	MSG=$2
	if [ $RET -eq 0 ]; then
		echo "RESULT: OK $MSG"
		exit 0
	else
		echo "RESULT: FAILED $MSG"
		exit 1
	fi

	echo "RESULT: FAILED THIS SHOULD NOT HAPPEN $0 $@"
	exit 1
}

vm_id() {
	onevm list -v -f NAME=$VMNAME | tail -n1 | awk '{print $1}'
}


vm_destroy() {
	VMID=$(/puppet/jenkins/bin/metacloud.init id)
	if [ -z "$VMID" ]; then
		rreturn 1 "metacloud id not detected"
	fi
	onevm delete $VMID
	rreturn $? "$0 destroy $@"
}

vm_ssh() {
	VMIP=$(onevm show $(/puppet/jenkins/bin/metacloud.init id) | grep PUBLIC_IP | awk -F"\"" '{print $2}')
	if [ -z "$VMIP" ]; then
		rreturn 1 "vm ip not detected from metacloud"
	fi
	ssh -i $ONERSA -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' -o 'ConnectTimeout=5' -o 'LogLevel=quiet' root@$VMIP "$1"
	rreturn $? "$0 ssh $@"
}

vm_start() {
	if [ -z $1 ]; then
		TEMPLATE="rsyslog2-jessie-metacloud"
	else
		TEMPLATE=$1
	fi

	#/puppet/jenkins/bin/metacloud.init status | grep $VMNAME
	onevm list -v -f NAME=$VMNAME | grep $ONEUSERNAME
	if [ $? -eq 0 ]; then
		rreturn $? "metacloud vm already running"
	fi

	onetemplate instantiate $TEMPLATE --name $VMNAME
	RET=1
	for i in `seq 1 600`; do
		/puppet/jenkins/bin/metacloud.init ssh /bin/true 1>/dev/null && RET=$? && break 1>/dev/null
		/puppet/jenkins/bin/metacloud.init status
		sleep 1
	done
	if [ $RET -ne 0 ]; then
		rreturn $RET "$0 start failed $VMNAME"
	fi
	sleep 10
	for i in `seq 1 300`; do
		#this is created by rc.local modified by cloudinit
		/puppet/jenkins/bin/metacloud.init ssh '[ -f /root/READY-TO-USE ]'
		if [ $? -eq 0 ]; then
			/puppet/jenkins/bin/metacloud.init fixup
			rreturn 0 "$0 start"
		fi
		echo "INFO: waiting for cloud-init to finnish"
		sleep 1
	done
	rreturn 1 "$0 start failed"
}

vm_status() {
	onevm list -v -f NAME=$VMNAME
	rreturn $? "$0 status"
}

vm_fixup() {
	/puppet/jenkins/bin/metacloud.init ssh '
cat /etc/krb5.conf  | grep ".meta.zcu.cz = META" 1>/dev/null 2>/dev/null
if [ $? -eq 1 ]; then perl -pi -e "s#.zcu.cz = ZCU.CZ#.zcu.cz = ZCU.CZ\\n.meta.zcu.cz = META#" /etc/krb5.conf; fi'
	rreturn $? "$0 fixup"
}

vm_shutdown() {
	/puppet/jenkins/bin/metacloud.init ssh /bin/true
	if [ $? -ne 0 ]; then
		rreturn $? "shutdown vm not running"
	fi

	echo "INFO: sending poweroff"
	timeout 60 /puppet/jenkins/bin/metacloud.init ssh poweroff
	if [ $? -ne 0 ]; then
		rreturn $? "shutdown cannot shutdown vm"
	fi

	RET=1
	for i in `seq 1 60`; do
		/puppet/jenkins/bin/metacloud.init ssh /bin/true 1>/dev/null
		if [ $? = 1 ]; then
			rreturn $? "shutdown"
		fi
		sleep 1
	done

	rreturn 1 "shutdown did not finished in time"
}

vm_build() {
	/puppet/jenkins/bin/metacloud.init shutdown
	/puppet/jenkins/bin/metacloud.init destroy
	sleep 5
	rreturn $? "$0"
}

metacloud_login() {
	cd /dev/shm || exit 1
	oneuser login $ONEUSERNAME --x509 --cert $ONECRT --key $ONEKEY
}

metacloud_creds() {
	echo "transfer credentials to /dev/shm and then login"
	rm $ONE_AUTH
	su jenkins
	echo "try metacloud.init templates to sync vm templates"
	
}

#used for fdd testing scenarios
metacloud_delegate() {
	cat $ONERSA | metacloud.init ssh 'cat > /dev/shm/sshkey; chmod 600 /dev/shm/sshkey; ln -sf /dev/shm/sshkey /root/.ssh/id_rsa'
}

metacloud_templates() {
	onetemplate delete rsyslog2-wheezy-metacloud 1>/dev/null
	onetemplate create /puppet/jenkins/files/template.rsyslog2-wheezy-metacloud
	onetemplate delete rsyslog2-wheezy-small-metacloud 1>/dev/null
	onetemplate create /puppet/jenkins/files/template.rsyslog2-wheezy-small-metacloud

	onetemplate delete rsyslog2-jessie-metacloud 1>/dev/null
	onetemplate create /puppet/jenkins/files/template.rsyslog2-jessie-metacloud
	onetemplate delete rsyslog2-jessie-small-metacloud 1>/dev/null
	onetemplate create /puppet/jenkins/files/template.rsyslog2-jessie-small-metacloud

	onetemplate delete rsyslog2-centos7-metacloud 1>/dev/null
	onetemplate create /puppet/jenkins/files/template.rsyslog2-centos7-metacloud
	onetemplate delete rsyslog2-centos7-small-metacloud 1>/dev/null
	onetemplate create /puppet/jenkins/files/template.rsyslog2-centos7-small-metacloud
}

vm_list() {
	if [ "$1" = "-n" ]; then
		onevm list -v | while read i; do 
			echo -n "$i"
			VMIP=$(onevm show $( echo "$i" | awk '{print $4}' ) | grep PUBLIC_IP | awk -F"\"" '{print $2}')
			VMHNAME=$(host $VMIP 2>/dev/null| grep "domain name pointer" | rev | awk '{print $1}' | rev)
			echo " $VMHNAME"
		done
	else
		onevm list -v
	fi
}

#used for rsyslog/test02
metacloud_update() {
	for all in $(/puppet/jenkins/bin/metacloud.init list|grep "R[CS]-"| awk '{print $4}'); do
		VMNAME=$all /puppet/jenkins/bin/metacloud.init ssh 'cd /puppet && sh bootstrap.install.sh'
	done
}

all_warden3_nodes() {
	CMD=$1

	for all in $( /puppet/jenkins/bin/metacloud.init list | egrep "(WS-|H[A-Z]+-)" | awk '{print $4}' ); do
                VMNAME=$all /puppet/jenkins/bin/metacloud.init ssh "$CMD"
	done
	rreturn 0 "$0 aw3"
}

all_sc_nodes() {
	CMD=$1

	for all in $( /puppet/jenkins/bin/metacloud.init list | egrep "(SC-)" | awk '{print $4}' ); do
                VMNAME=$all /puppet/jenkins/bin/metacloud.init ssh "$CMD"
	done
	rreturn 0 "$0 all sc nodes"
}

case "$1" in
	creds)
		metacloud_creds
	;;
	delegate)
		metacloud_delegate
	;;
	templates)
		metacloud_templates
	;;
	login)
		metacloud_login
	;;
	list)
		vm_list "$2"
	;;
	build)
		vm_build
	;;
	start)
		vm_start "$2"
	;;
	status)
		vm_status
	;;
	shutdown)
		vm_shutdown
	;;
	destroy)
		vm_destroy
	;;
	ssh)
		vm_ssh "$2"
	;;
	node)
		VMNAME=$2 /puppet/jenkins/bin/metacloud.init ssh "$3"
	;;
	sshs)
		VMNAME=$(/puppet/jenkins/bin/metacloud.init list|grep "RS-"|awk '{print $4}') /puppet/jenkins/bin/metacloud.init ssh "$2"
	;;
	sshc)
		VMNAME=$(/puppet/jenkins/bin/metacloud.init list|grep "RC-"|head -1|awk '{print $4}') /puppet/jenkins/bin/metacloud.init ssh "$2"
	;;
	sshe)
		VMNAME=$(/puppet/jenkins/bin/metacloud.init list|grep "ELK-"|head -1|awk '{print $4}') /puppet/jenkins/bin/metacloud.init ssh "$2"
	;;
	sshdev)
		VMNAME=$(/puppet/jenkins/bin/metacloud.init list|grep "RDEVCLIENTX"|head -1|awk '{print $4}') /puppet/jenkins/bin/metacloud.init ssh "$2"
	;;
	sshw)
		VMNAME=$(/puppet/jenkins/bin/metacloud.init list|grep "WS-"|head -1|awk '{print $4}') /puppet/jenkins/bin/metacloud.init ssh "$2"
	;;
	fixup)
		vm_fixup
	;;
	update)
		metacloud_update
	;;
	aw3)
		all_warden3_nodes "$2"
	;;
	asc)
		all_sc_nodes "$2"
	;;
	id)
		vm_id
	;;
	*)
		rreturn 1 "$0 wrong command"
	;;
esac

